acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
```{r, warning=FALSE, error=FALSE, message=FALSE, echo=FALSE}
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
mrw
View(mrw)
filter(mrw, Africe==1)
filter(mrw, Africa==1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
regAfrica <- lm(dep ~ log(rgdpw60)+col1+col2*Africa, data=mrw)
summary(regAfrica)
regAfrica <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital*Africa, data=mrw)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(InvShare = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(HumanCapital = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
reg1 <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital, data=filter(mrw, o==1))
stargazer(reg1, reg2, reg3, header=FALSE, type="latex")
regAfrica <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital*Africa, data=mrw)
summary(regAfrica)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(s.k = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(s.h = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
reg1 <- lm(dep ~ log(rgdpw60)+s.k+s.h, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+s.k+s.h, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+s.k+s.h, data=filter(mrw, o==1))
stargazer(reg1, reg2, reg3, header=FALSE, type="latex")
regAfrica <- lm(dep ~ log(rgdpw60)+s.k+s.h*Africa, data=mrw)
summary(regAfrica)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(sk = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(sh = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
reg1 <- lm(dep ~ log(rgdpw60)+sk+sh, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+sk+sh, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+sk+sh, data=filter(mrw, o==1))
regAfrica <- lm(dep ~ log(rgdpw60)+sk+sh*Africa, data=mrw)
summary(regAfrica)
reg1
summary(reg1)
regAfrica <- lm(dep ~ log(rgdpw60)+sk+sh*Africa, data=mrw)
summary(regAfrica)
### Init
library(readxl)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRO_MillexData.xlsx",sheet = "Share of GDP")
setwd("F:/OneDrive/02_Studium/04_Econ_MSc/2-SS_2023/4423_Macroeconometrics/AdvMacroecotrics/Project/MacrometricsProject_2023")
### Proposal Plot Creation
data <- read_xlsx("data/SIPRO_MillexData.xlsx",sheet = "Share of GDP")
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP")
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP")
View(data)
?read_xlsx
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199")
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199")
View(data)
library(tidyverse)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, 2020.0)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`)
View(data)
library(ggplot2)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175)
View(data)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!is.na(`2020.0`))
View(data)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!is.na(`2020.0`) || `2020.0` !in c("xxx","..."))
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!is.na(`2020.0`) | !(`2020.0` in c("xxx","...")))
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!is.na(`2020.0`) | !(`2020.0` %in% c("xxx","...")))
View(data)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA)))
View(data)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = `2020.0`*100)
View(data)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2020.0`)*100)
View(data)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2020.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2020.0`)*100) %>%
select(-`2020.0`)
View(data)
dist_data <- read_xls("data/geo_cepii.xls")
dist_data
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(country = "Russian Federation")
dist_data
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o = "RUS")
dist_data
dist_data <- read_xls("data/dist_cepii.xls")
dist_data
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o = "RUS")
dist_data
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS")
dist_data
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
dist_data
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS")
dist_data
country_data <- read_xls("data/geo_cepii.xls")
country_data
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
country_data
data_total <- left_join(dist_data, country_data, by=c(iso_o = iso3))
data_total <- left_join(dist_data, country_data, by=c("iso_o" = "iso3"))
data_total
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS")
data_total <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
data_total <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total
data
data_total2 <- left_join(data, data_total1, by=c("Country"="country"))
data_total1 <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total2 <- left_join(data, data_total1, by=c("Country"="country"))
data_total2
View(data_total2)
# Changed Serbia and Montenegro, Czech Republic,
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
data_total1 <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total2 <- left_join(data, data_total1, by=c("Country"="country"))
View(data_total2)
plot(pct2020 ~ dist, data = data_total2)
?plot
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2019.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2020.0`)*100) %>%
select(-`2020.0`)
# Changed Serbia and Montenegro, Czech Republic,
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
data_total1 <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total2 <- left_join(data, data_total1, by=c("Country"="country"))
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2022.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2020.0`)*100) %>%
select(-`2020.0`)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2022.0`) %>%
slice(124:175) %>%
filter(!(`2020.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2022.0`)*100) %>%
select(-`2022.0`)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2022.0`) %>%
slice(124:175) %>%
filter(!(`2022.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2022.0`)*100) %>%
select(-`2022.0`)
# Changed Serbia and Montenegro, Czech Republic,
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
data_total1 <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total2 <- left_join(data, data_total1, by=c("Country"="country"))
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2021.0`) %>%
slice(124:175) %>%
filter(!(`2021.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2021.0`)*100) %>%
select(-`2021.0`)
# Changed Serbia and Montenegro, Czech Republic,
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
data_total1 <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
data_total2 <- left_join(data, data_total1, by=c("Country"="country"))
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)
library(ggthemes)
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
theme_minimal()
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
theme_economist()
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
theme_minimal()
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")
ggplot(data_total2, aes(x=dist, y=pct2020))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
ggplot(data_total2, aes(x=dist, y=pct2020), group_by(continent))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
ggplot(data_total2, aes(x=dist, y=pct2020), color = continent)+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
data_total2
View(data_total2)
ggplot(data_total2, aes(x=dist, y=pct2020), color = continent)+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
ggplot(data_total2, aes(x=dist, y=pct2020, color = continent))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
# Changed Serbia and Montenegro, Czech Republic, etc
NATO <- read_table("data/NATO_members.txt")
NATO
# Changed Serbia and Montenegro, Czech Republic, etc
NATO <- read_table("data/NATO_members.txt") %>%
mutate(NATO = 1)
NATO
# Changed Serbia and Montenegro, Czech Republic, etc
NATO <- read_table("data/NATO_members.txt", header=FALSE) %>%
mutate(NATO = 1)
?read_table
# Changed Serbia and Montenegro, Czech Republic, etc
NATO <- read_table("data/NATO_members.txt", col_names=c("Country")) %>%
mutate(NATO = 1)
NATO
data_total2
data_total3 <- left_join(data_total2, NATO, by=c("Country"))
data_total3
data_total3 <- left_join(data_total2, NATO, by=c("Country"))%>%
mutate_if(is.numeric,coalesce,0)
data_total3
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
data_total3 <- left_join(data_total2, NATO, by=c("Country"))%>%
mutate_if(is.numeric,coalesce,0) %>%
muatate(NATO = as.factor(NATO))
data_total3 <- left_join(data_total2, NATO, by=c("Country"))%>%
mutate_if(is.numeric,coalesce,0) %>%
mutate(NATO = as.factor(NATO))
data_total3
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
theme_minimal()
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
ggtitle("Relationship between Military Spending and Distance to Moscow")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "Macrometrics Proposal Plot")
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "Macrometrics Proposal Plot")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "as % of GDP in 2021")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
ggplot(data_total3, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
#labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "as % of GDP in 2021")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2021.0`) %>%
slice(124:175) %>%
filter(!(`2021.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2021.0`)*100) %>%
select(-`2021.0`)
# Here it is necessary to manually change some country names in "geo_cepii.xlsx"
NATO <- read_table("data/NATO_members.txt", col_names=c("Country")) %>%
mutate(NATO = 1)
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
tmp_data <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
tmp_data <- left_join(data, tmp_data, by=c("Country"="country"))
final_data <- left_join(tmp_data, NATO, by=c("Country"))%>%
mutate_if(is.numeric,coalesce,0) %>%
mutate(NATO = as.factor(NATO))
ggplot(final_data, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "as % of GDP in 2021")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
