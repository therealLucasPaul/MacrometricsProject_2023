for(ii in 1:k){
for(jj in 1:M){
plot.ts(A_store[,ii,jj])
abline(h = mean(A_store[,ii,jj]), col = "red", lty = 2)
abline(h = quantile(A_store[,ii,jj], p = c(0.05, 0.95)), col = "blue")
Z_scores[(jj-1)*k+ii] <- geweke.diag(A_store[,ii,jj])$z
}
}
for(ii in 1:k){
for(jj in 1:M){
plot.ts(A_store[,ii,jj])
abline(h = mean(A_store[,ii,jj]), col = "red", lty = 2)
abline(h = quantile(A_store[,ii,jj], p = c(0.05, 0.95)), col = "blue")
Z_scores[(jj-1)*k+ii] <- geweke.diag(A_store[,ii,jj])$z
}
}
# Autocorrelation of parameter draws for AR coefficients
par(mfrow=c(k,3),mar=c(1,1,1,1))
for(ii in 1:k){
for(jj in 1:M){
acf(A_store[,ii,jj])
}
}
par(mfrow=c(3,3),mar=c(2,2,1,1))
for(jj in 1:M){
for(ii in 1:M){
plot.ts(S_store[,ii,jj])
# convergence diagnostics, if not rejected samples have converged
Z_scores[k*M+(jj-1)*M+ii] <- geweke.diag(S_store[,ii,jj])$z
}
}
# Autocorrelation of parameter draws for variance coefficients
par(mfrow=c(M,M),mar=c(1,1,1,1))
for(jj in 1:M){
for(ii in 1:M){
acf(S_store[,ii,jj])
}
}
idx <- which(abs(Z_scores) > crit_val)
paste(length(idx), " out of ",k*M+M^2, " variables' z-values exceed the 1.96 threshold", " (", round(length(idx)/(k*M+M^2)*100,2),"%)",sep="")
#Quantiles over the first dimension (number of saved draws)
IRFchol_low    <- apply(IRFchol_store, c(2,3,4), quantile, 0.16,na.rm=TRUE)
IRFchol_high   <- apply(IRFchol_store, c(2,3,4), quantile, 0.84,na.rm=TRUE)
IRFchol_median <- apply(IRFchol_store, c(2,3,4), median, na.rm=TRUE)
IRFsign_low    <- apply(IRFsign_store, c(2,3,4), quantile, 0.16,na.rm=TRUE)
IRFsign_high   <- apply(IRFsign_store, c(2,3,4), quantile, 0.84,na.rm=TRUE)
IRFsign_median <- apply(IRFsign_store, c(2,3,4), median, na.rm=TRUE)
#Start plotting the IRFs w.r.t. different shocks
par(mfrow=c(3,3),mar=c(4,4,2,2))
for(ii in 1:M){
for(jj in 1:M){
min1 <- min(IRFchol_low[ii,jj,])
max1 <- max(IRFchol_high[ii,jj,])
plot.ts(IRFchol_median[ii,jj,], ylab="", main=paste0("Shock ",colnames(Y)[jj], " on ",colnames(Y)[ii]), ylim = c(min1,max1),xaxt="n",lwd=2,xlab="")
lines(IRFchol_low[ii,jj,], lty = 2, lwd=2)
lines(IRFchol_high[ii,jj,], lty = 2, lwd=2)
abline(h=0,col="red",lwd=2)
abline(v=seq(1,nhor,by=2), col="lightgrey", lty=2)
axis(1, at=seq(1,nhor,by=2), labels=seq(0,nhor-1,by=2))
}
}
par(mfrow=c(3,3))
for(ii in 1:M){
for(jj in 1:M){
min1 <- min(IRFsign_low[ii,jj,])
max1 <- max(IRFsign_high[ii,jj,])
plot.ts(IRFsign_median[ii,jj,], ylab="", xlab="", main=paste0("Shock ",colnames(Y)[jj], " on ",colnames(Y)[ii]), ylim = c(min1,max1), xaxt="n",lwd=2)
lines(IRFsign_low[ii,jj,], lty = 2, lwd=2)
lines(IRFsign_high[ii,jj,], lty = 2, lwd=2)
abline(h=0,col="red",lwd=2)
abline(v=seq(1,nhor,by=2), col="lightgrey", lty=2)
axis(1, at=seq(1,nhor,by=2), labels=seq(0,nhor-1,by=2))
}
}
## check signs
par(mfrow=c(1,1))
hist(cou_store)
### plotting predictions
yf_low    <- apply(yf_store, c(2,3), quantile, 0.16, na.rm=TRUE)
yf_median <- apply(yf_store, c(2,3), quantile, 0.50, na.rm=TRUE)
yf_high   <- apply(yf_store, c(2,3), quantile, 0.84, na.rm=TRUE)
yf_low    <- cbind(t(Yraw[(bigT-20):bigT,]),yf_low)
yf_median <- cbind(t(Yraw[(bigT-20):bigT,]),yf_median)
yf_high   <- cbind(t(Yraw[(bigT-20):bigT,]),yf_high)
xax <- c(as.character(time[(bigT-20):bigT]),paste0("t+",seq(1,fhorz)))
par(mfrow=c(3,1),mar=c(5,3,2,3))
for(ii in 1:M){
min1 <- min(yf_low[ii,])
max1 <- max(yf_high[ii,])
plot.ts(yf_median[ii,], ylim=c(min1,max1), main=colnames(Y)[[ii]], ylab="", xlab="", xaxt="n",lwd=2)
lines(yf_low[ii,], lty=2,lwd=2)
lines(yf_high[ii,], lty=2,lwd=2)
lines(yf_median[ii,], lty=1,lwd=2)
axis(1, at=seq(1,29), labels=xax, las=2)
abline(v=seq(1,29), col="lightgrey", lty=2)
}
load("data_kilian_2009.Rda")
str(data)
data_transformed <-
read_dta("pwt1001.dta")  %>%
select(country, year, rgdpo, rgdpe, pop, labsh, csh_i) %>%         # Select needed columns
filter(year == start_year | year == end_year) %>%           # Select only rows of the needed years
filter(!is.na(rgdpo) | !is.na(rgdpe)) %>%                   # Filter rows with NA for GDP values
group_by(country) %>% filter(n() == 2)  %>% ungroup() %>%   # Filter all countries which do not have both year
mutate(invsh = csh_i) %>%                               # Calc investment share from labor share
mutate(rgdpePc=rgdpe/pop, rgdpoPc=rgdpo/pop) %>%            # Calc GDP per capita
mutate(logrgdpo=ifelse(year == end_year, log(rgdpoPc), log(rgdpoPc)*(-1))) %>%      # Calc growth rates
mutate(logrgdpe=ifelse(year == end_year, log(rgdpePc), log(rgdpePc)*(-1))) %>%
mutate(logpop=ifelse(year == end_year, log(pop), log(pop)*(-1))) %>%
group_by(country) %>%
summarise(grgdpo=sum(logrgdpo), grgdpe=sum(logrgdpe), gpop=sum(logpop),
basegdpo=log(first(rgdpoPc[year==start_year])),
basegdpe=log(first(rgdpePc[year==start_year])),
invsh=first(invsh[year==start_year]))
library(readxl)
library(dplyr)
start_year = 1960
end_year = 1990
start_year = 1960
end_year = 1990
data_transformed <-
read_dta("pwt1001.dta")  %>%
select(country, year, rgdpo, rgdpe, pop, labsh, csh_i) %>%         # Select needed columns
filter(year == start_year | year == end_year) %>%           # Select only rows of the needed years
filter(!is.na(rgdpo) | !is.na(rgdpe)) %>%                   # Filter rows with NA for GDP values
group_by(country) %>% filter(n() == 2)  %>% ungroup() %>%   # Filter all countries which do not have both year
mutate(invsh = csh_i) %>%                               # Calc investment share from labor share
mutate(rgdpePc=rgdpe/pop, rgdpoPc=rgdpo/pop) %>%            # Calc GDP per capita
mutate(logrgdpo=ifelse(year == end_year, log(rgdpoPc), log(rgdpoPc)*(-1))) %>%      # Calc growth rates
mutate(logrgdpe=ifelse(year == end_year, log(rgdpePc), log(rgdpePc)*(-1))) %>%
mutate(logpop=ifelse(year == end_year, log(pop), log(pop)*(-1))) %>%
group_by(country) %>%
summarise(grgdpo=sum(logrgdpo), grgdpe=sum(logrgdpe), gpop=sum(logpop),
basegdpo=log(first(rgdpoPc[year==start_year])),
basegdpe=log(first(rgdpePc[year==start_year])),
invsh=first(invsh[year==start_year]))
library(tidyverse)
start_year = 1960
end_year = 1990
data_transformed <-
read_dta("pwt1001.dta")  %>%
select(country, year, rgdpo, rgdpe, pop, labsh, csh_i) %>%         # Select needed columns
filter(year == start_year | year == end_year) %>%           # Select only rows of the needed years
filter(!is.na(rgdpo) | !is.na(rgdpe)) %>%                   # Filter rows with NA for GDP values
group_by(country) %>% filter(n() == 2)  %>% ungroup() %>%   # Filter all countries which do not have both year
mutate(invsh = csh_i) %>%                               # Calc investment share from labor share
mutate(rgdpePc=rgdpe/pop, rgdpoPc=rgdpo/pop) %>%            # Calc GDP per capita
mutate(logrgdpo=ifelse(year == end_year, log(rgdpoPc), log(rgdpoPc)*(-1))) %>%      # Calc growth rates
mutate(logrgdpe=ifelse(year == end_year, log(rgdpePc), log(rgdpePc)*(-1))) %>%
mutate(logpop=ifelse(year == end_year, log(pop), log(pop)*(-1))) %>%
group_by(country) %>%
summarise(grgdpo=sum(logrgdpo), grgdpe=sum(logrgdpe), gpop=sum(logpop),
basegdpo=log(first(rgdpoPc[year==start_year])),
basegdpe=log(first(rgdpePc[year==start_year])),
invsh=first(invsh[year==start_year]))
library(haven)
data_transformed <-
read_dta("pwt1001.dta")  %>%
select(country, year, rgdpo, rgdpe, pop, labsh, csh_i) %>%         # Select needed columns
filter(year == start_year | year == end_year) %>%           # Select only rows of the needed years
filter(!is.na(rgdpo) | !is.na(rgdpe)) %>%                   # Filter rows with NA for GDP values
group_by(country) %>% filter(n() == 2)  %>% ungroup() %>%   # Filter all countries which do not have both year
mutate(invsh = csh_i) %>%                               # Calc investment share from labor share
mutate(rgdpePc=rgdpe/pop, rgdpoPc=rgdpo/pop) %>%            # Calc GDP per capita
mutate(logrgdpo=ifelse(year == end_year, log(rgdpoPc), log(rgdpoPc)*(-1))) %>%      # Calc growth rates
mutate(logrgdpe=ifelse(year == end_year, log(rgdpePc), log(rgdpePc)*(-1))) %>%
mutate(logpop=ifelse(year == end_year, log(pop), log(pop)*(-1))) %>%
group_by(country) %>%
summarise(grgdpo=sum(logrgdpo), grgdpe=sum(logrgdpe), gpop=sum(logpop),
basegdpo=log(first(rgdpoPc[year==start_year])),
basegdpe=log(first(rgdpePc[year==start_year])),
invsh=first(invsh[year==start_year]))
data_transformed
View(data_transformed)
unc_rgdpe_lm <- lm(grgdpe ~ basegdpe, data = data_transformed)
summary(unc_rgdpe_lm)
ggplot(data_transformed, aes(x = basegdpe, y = grgdpe)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", lty="dotted")
### RGDPO
cond_rgdpo_lm <- lm(grgdpo ~ basegdpo + gpop + invsh, data = data_transformed)
summary(cond_rgdpo_lm)
### RGDPE
cond_rgdpe_lm <- lm(grgdpe ~ basegdpe + gpop + invsh, data = data_transformed)
summary(cond_rgdpe_lm)
cond_rgdpo_lm <- lm(grgdpo ~ basegdpo + gpop + invsh, data = data_transformed)
summary(cond_rgdpo_lm)
mrw <-
read_csv("mrw.csv")
?spec("mrw.csv")
View(mrw)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y)-log(0.05+popgrowth)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth))
View(mrw)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y)-log(0.05+popgrowth)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth)) %>%
mutate(dep = log(rgdpw60)-log(rgdpw85))
mrw[,which(n=1)]
mrw[,which(n==1)]
mrw[,which(mrw$n=1)]
mrw[,which(mrw$n==1)]
filter(mrw, n=1=)
filter(mrw, n==1)
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y)-log(0.05+popgrowth)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth)) %>%
mutate(dep = log(rgdpw60)-log(rgdpw85))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
mrw
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y)-log(0.05+popgrowth)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth)) %>%
mutate(dep = log(rgdpw60)-log(rgdpw85))%>%
filter(!is.na(dep) | !is.na(col2) | !is.na(col1))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y)-log(0.05+popgrowth)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))%>%
filter(!is.na(dep) | !is.na(col2) | !is.na(col1))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y)-log(0.05+popgrowth)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))%>%
filter(!is.na(dep) | !is.na(col2) | !is.na(col1))
spec(mrw)
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))%>%
filter(!is.na(dep) | !is.na(col2) | !is.na(col1))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
reg2 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, i==1))
summary(reg2)
reg3 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, o==1))
summary(reg3)
library(stargazer)
stargazer(reg1, reg2, reg3)
albatross
tinytex
tex
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
reg2 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, i==1))
summary(reg2)
reg3 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, o==1))
summary(reg3)
stargazer(reg1, reg2, reg3)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
summary(reg1)
reg2 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, i==1))
summary(reg2)
reg3 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, o==1))
summary(reg3)
stargazer(reg1, reg2, reg3)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60))
reg1 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+col1+col2, data=filter(mrw, o==1))
stargazer(reg1, reg2, reg3)
tinytex::uninstall_tinytex ()
tinytex::uninstall_tinytex ()
stargazer(reg1, reg2, reg3, header=FALSE)
start_year = 1960
end_year = 1990
data_transformed <-
read_dta("pwt1001.dta")  %>%
select(country, year, rgdpo, rgdpe, pop, labsh, csh_i) %>%         # Select needed columns
filter(year == start_year | year == end_year) %>%           # Select only rows of the needed years
filter(!is.na(rgdpo) | !is.na(rgdpe)) %>%                   # Filter rows with NA for GDP values
group_by(country) %>% filter(n() == 2)  %>% ungroup() %>%   # Filter all countries which do not have both year
mutate(invsh = csh_i) %>%                               # Calc investment share from labor share
mutate(rgdpePc=rgdpe/pop, rgdpoPc=rgdpo/pop) %>%            # Calc GDP per capita
mutate(logrgdpo=ifelse(year == end_year, log(rgdpoPc), log(rgdpoPc)*(-1))) %>%      # Calc growth rates
mutate(logrgdpe=ifelse(year == end_year, log(rgdpePc), log(rgdpePc)*(-1))) %>%
mutate(logpop=ifelse(year == end_year, log(pop), log(pop)*(-1))) %>%
group_by(country) %>%
summarise(grgdpo=sum(logrgdpo), grgdpe=sum(logrgdpe), gpop=sum(logpop),
basegdpo=log(first(rgdpoPc[year==start_year])),
basegdpe=log(first(rgdpePc[year==start_year])),
invsh=first(invsh[year==start_year]))
#View(data_transformed)
unc_rgdpe_lm <- lm(grgdpe ~ basegdpe, data = data_transformed)
summary(unc_rgdpe_lm)
ggplot(data_transformed, aes(x = basegdpe, y = grgdpe)) +
geom_point() +
stat_smooth(method = "lm", col = "blue", lty="dotted")
mrw
AfricanCountriesList <- read.table("F:/OneDrive/02_Studium/04_Econ_MSc/2-SS_2023/5617_Macro 1 (Jesus)/Assignment/AfricanCountriesList.txt", quote="\"", comment.char="")
View(AfricanCountriesList)
acl <- read_table("AfricanCountriesList.txt")
acl
acl <- read_table("AfricanCountriesList.txt", header=F)
?read_table
?read_table2
acl <- read_table("AfricanCountriesList.txt", header=FALSE)
acl <- read.table("AfricanCountriesList.txt", header=FALSE)
acl
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl
acl
vector(acl)
acl["v1"]
acl["V1"]
as.vector(acl["V1"])
as.vector(acl)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% as.vector(acl), 1,0))
mrw
as.vector(acl)
country
mrw
as.vector(acl)
ifelse("Algeria" %in% as.vector(acl), 1,0)
ifelse("algeria" %in% as.vector(acl), 1,0)
ifelse("Algeria" %in% as.vector(acl), 1,0)
as.vector(acl)
as.vector(acl)$V1
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% as.vector(acl)$V1, 1,0))
mrw
View(mrw)
acl$V1
acl
View(acl)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
```{r, warning=FALSE, error=FALSE, message=FALSE, echo=FALSE}
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
mrw
View(mrw)
filter(mrw, Africe==1)
filter(mrw, Africa==1)
mrw <-
read_csv("mrw.csv") %>%
mutate(col1 = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(col2 = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
regAfrica <- lm(dep ~ log(rgdpw60)+col1+col2*Africa, data=mrw)
summary(regAfrica)
regAfrica <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital*Africa, data=mrw)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(InvShare = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(HumanCapital = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
reg1 <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital, data=filter(mrw, o==1))
stargazer(reg1, reg2, reg3, header=FALSE, type="latex")
regAfrica <- lm(dep ~ log(rgdpw60)+InvShare+HumanCapital*Africa, data=mrw)
summary(regAfrica)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(s.k = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(s.h = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
reg1 <- lm(dep ~ log(rgdpw60)+s.k+s.h, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+s.k+s.h, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+s.k+s.h, data=filter(mrw, o==1))
stargazer(reg1, reg2, reg3, header=FALSE, type="latex")
regAfrica <- lm(dep ~ log(rgdpw60)+s.k+s.h*Africa, data=mrw)
summary(regAfrica)
acl <- read.delim("AfricanCountriesList.txt", header=FALSE)
acl <- c(acl$V1,'Central Afr. Rep.','Congo,','Gambia, The','Ivory Coast','S. Africa','Swaziland','Zaire')
mrw <-
read_csv("mrw.csv") %>%
mutate(sk = log(i_y/100)-log(0.05+popgrowth/100)) %>%
mutate(sh = log(school)-log(0.05+popgrowth/100)) %>%
mutate(dep = log(rgdpw85)-log(rgdpw60)) %>%
mutate(Africa = ifelse(country %in% acl, 1,0))
reg1 <- lm(dep ~ log(rgdpw60)+sk+sh, data=filter(mrw, n==1))
reg2 <- lm(dep ~ log(rgdpw60)+sk+sh, data=filter(mrw, i==1))
reg3 <- lm(dep ~ log(rgdpw60)+sk+sh, data=filter(mrw, o==1))
regAfrica <- lm(dep ~ log(rgdpw60)+sk+sh*Africa, data=mrw)
summary(regAfrica)
reg1
summary(reg1)
regAfrica <- lm(dep ~ log(rgdpw60)+sk+sh*Africa, data=mrw)
summary(regAfrica)
setwd("F:/OneDrive/02_Studium/04_Econ_MSc/2-SS_2023/4423_Macroeconometrics/AdvMacroecotrics/Project/MacrometricsProject_2023")
### Init
library(readxl)
library(tidyverse)
library(ggplot2)
library(ggthemes)
### Proposal Plot Creation
data <- read_xlsx("data/SIPRI_MillexData.xlsx",sheet = "Share of GDP", range="A6:BX199") %>%
select(Country, `2021.0`) %>%
slice(124:175) %>%
filter(!(`2021.0` %in% c("xxx","...", NA))) %>%
mutate(pct2020 = as.numeric(`2021.0`)*100) %>%
select(-`2021.0`)
# Here it is necessary to manually change some country names in "geo_cepii.xlsx"
NATO <- read_table("data/NATO_members.txt", col_names=c("Country")) %>%
mutate(NATO = 1)
NATO
View(NATO)
?read_table()
?read_table2()
# Here it is necessary to manually change some country names in "geo_cepii.xlsx"
NATO <- read_table2("data/NATO_members.txt", col_names=c("Country")) %>%
mutate(NATO = 1)
# Here it is necessary to manually change some country names in "geo_cepii.xlsx"
NATO <- read_table("data/NATO_members.txt", col_names=c("Country")) %>%
mutate(NATO = 1)
NATO <- read.table("data/NATO_members.txt", col_names=c("Country"))
NATO <- read.table("data/NATO_members.txt")
NATO
NATO <- read.table("data/NATO_members.txt",sep="\t")
NATO
?read.table
# Here it is necessary to manually change some country names in "geo_cepii.xlsx"
NATO <- read.table("data/NATO_members.txt",sep="\t", col.names = c("Country")) %>%
mutate(NATO = 1)
NATO
# Here it is necessary to manually change some country names in "geo_cepii.xlsx"
NATO <- read.table("data/NATO_members.txt",sep="\t", col.names = c("Country")) %>%
mutate(NATO = 1)
country_data <- read_xls("data/geo_cepii.xls") %>%
select(iso2, iso3, country, continent, city_en)
dist_data <- read_xls("data/dist_cepii.xls") %>%
filter(iso_o == "RUS") %>%
select(iso_o, iso_d, dist)
tmp_data <- left_join(dist_data, country_data, by=c("iso_d" = "iso3"), keep)
tmp_data <- left_join(data, tmp_data, by=c("Country"="country"))
final_data <- left_join(tmp_data, NATO, by=c("Country"))%>%
mutate_if(is.numeric,coalesce,0) %>%
mutate(NATO = as.factor(NATO))
ggplot(final_data, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=data_total2$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "as % of GDP in 2021")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
ggplot(final_data, aes(x=dist, y=pct2020, color = NATO))+
geom_point()+
geom_label(label=final_data$Country,
nudge_x = 0.25, nudge_y = 0.25,
check_overlap = T)+
xlab("Distance to Moscow in km")+
ylab("Military Spending in % of GDP (2021)")+
labs(title = "Relationship between Military Spending and Distance to Moscow", subtitle = "as % of GDP in 2021")+
scale_color_manual(values = c("0" = "red",
"1"="blue"))+
theme_minimal()
